var is = require("./is.wxs");

function _isString(targetString, funName) {
    if (!is.isString(targetString)) {
        console.log('[WXS:String]' + funName + ',targetString must be string');
        return false;
    };
    return true;
}
/**
 * toString 返回指定对象的字符串形式
 * @param {String} targetString 目标字符串
 */

function toString(targetString) {
    return targetString && targetString.toString();
}

/**
 * valueOf 返回指定对象的value
 * @param {String} targetString 目标字符串
 */

function valueOf(targetString) {
    return targetString && targetString.valueOf();
}

/**
 * charAt 一个字符串中返回指定的字符。
 * @param {String} targetString 目标字符串
 * @param {Number} index 返回指定字符的位置
 * 
 */
function charAt(targetString, index = 0) {
    var validatorString = _isString(targetString, 'charAt');
    if (validatorString) return targetString.charAt(index);
}

/**
 * charCodeAt 返回0到65535之间的整数，表示给定索引处的UTF-16代码单元
 * @param {String} targetString 目标字符串
 * @param {Number} index 返回指定字符的位置
 * 
 */
function charCodeAt(targetString, index = 0) {
    var validatorString = _isString(targetString, 'charCodeAt');
    if (validatorString) return targetString.charCodeAt(index);
}

function concat() {

}

/**
 * indexOf 查找字符串
 * @param {String} targetString 目标字符串
 * @param {String} searchValue 被查找的值
 * @param {Number} fromIndex 开始查找的位置
 * 
 */
function indexOf(targetString, searchValue, fromIndex = 0) {
    var validatorString = _isString(targetString, 'indexOf');
    if (validatorString) return targetString.indexOf(searchValue, fromIndex);
}

/**
 * lastIndexOf 查找字符串最后出现的位置
 * @param {String} targetString 目标字符串
 * @param {String} searchValue 被查找的值
 * @param {Number} fromIndex 开始查找的位置，str.length
 * 
 */
function lastIndexOf(targetString, searchValue, fromIndex = 0) {
    var validatorString = _isString(targetString, 'lastIndexOf');
    if (validatorString) return targetString.lastIndexOf(searchValue, fromIndex || targetString.length);
}

/**
 * endsWith 查找字符串
 * @param {String} targetString 目标字符串
 * @param {String} searchValue 被查找的值
 * @param {Number} position 作为targetString的长度，默认为targetString的长度
 * 
 */
function endsWith(targetString, searchValue, position) {
    var validatorString = _isString(targetString, 'endsWith');
    if (validatorString) return targetString.endsWith(searchValue, position || targetString.length);
}

function match(targetString,regExp) {
    var validatorString = _isString(targetString, 'match');
    if(!regExp) return console.log('[WXS:String]match,regExp must be exit');
    // var REGEXP = getRegExp(regExp,'i');
    var found = targetString.match(regExp);
    var REGEXP1 =  getRegExp('see (chapter \d+(\.\d)*)','i');
    var test =targetString.match(REGEXP1);
    console.log(found,'reg',is.isRegExp(regExp),'test',test,'REGEXP1',REGEXP1)
    if (validatorString) return targetString.match(regExp);
}

module.exports = {
    indexOf: indexOf,
    charAt: charAt,
    charCodeAt: charCodeAt,
    toString: toString,
    valueOf: valueOf,
    concat: concat,
    endsWith: endsWith,
    lastIndexOf: lastIndexOf,
    match: match
}